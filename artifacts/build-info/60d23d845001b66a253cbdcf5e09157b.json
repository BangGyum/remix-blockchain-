{
	"id": "60d23d845001b66a253cbdcf5e09157b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"homework1.sol": {
				"content": "pragma solidity >= 0.7.0 < 0.9.0;\r\nimport \"./Owned.sol\";\r\n/*\r\nDeposit Funcds with fallback function\r\nWithdrawal fucntion\r\nPermissions using modifier ( 권한분리, 권한승인을 위해 제어자)\r\n*/\r\n\r\ncontract homework is Owned{\r\n\r\n    mapping(address => uint) public balance;\r\n\r\n    function receiveMoney() public payable {\r\n\r\n    }\r\n\r\n\r\n}"
			},
			"Owned.sol": {
				"content": "pragma solidity ^0.8.1;\r\n\r\n\r\ncontract Owned{ //이것을 상속, 확장 (솔리디티는 다중상속도 가능)\r\n    address owner;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n    //제어자를 활용하는 중앙 집중 방식의  기본 구조 사용\r\n    //제어자를 추가 및 활용\r\n    modifier onlyOwner { //제어자, 해당 함수의 public 과 중괄호 사이\r\n        require(msg.sender == owner, \"You are not allowed\");\r\n        _; //밑에 createNewToken 함수 본문이 밑줄 위치로 복사됨\r\n            //그런다음 함수 본문에 다시 복사됨\r\n    }\r\n\r\n} "
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Owned.sol": {
				"Owned": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Owned.sol\":29:615  contract Owned{ //이것을 상속, 확장 (솔리디티는 다중상속도 가능)\r... */\n  mstore(0x40, 0x80)\n    /* \"Owned.sol\":140:198  constructor() public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Owned.sol\":180:190  msg.sender */\n  caller\n    /* \"Owned.sol\":172:177  owner */\n  0x00\n  dup1\n    /* \"Owned.sol\":172:190  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Owned.sol\":29:615  contract Owned{ //이것을 상속, 확장 (솔리디티는 다중상속도 가능)\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Owned.sol\":29:615  contract Owned{ //이것을 상속, 확장 (솔리디티는 다중상속도 가능)\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207395be2b3d72270685b3db279125d8d215549789f5df30dc693f1bfdb4534dad64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603f80605d6000396000f3fe6080604052600080fdfea26469706673582212207395be2b3d72270685b3db279125d8d215549789f5df30dc693f1bfdb4534dad64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3F DUP1 PUSH1 0x5D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x95BE2B3D72270685B3DB279125D8D215549789F5 0xDF ADDRESS 0xDC PUSH10 0x3F1BFDB4534DAD64736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "29:586:0:-:0;;;140:58;;;;;;;;;;180:10;172:5;;:18;;;;;;;;;;;;;;;;;;29:586;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212207395be2b3d72270685b3db279125d8d215549789f5df30dc693f1bfdb4534dad64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x95BE2B3D72270685B3DB279125D8D215549789F5 0xDF ADDRESS 0xDC PUSH10 0x3F1BFDB4534DAD64736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "29:586:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "24332",
								"totalCost": "36932"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 29,
									"end": 615,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 29,
									"end": 615,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 29,
									"end": 615,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 140,
									"end": 198,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 140,
									"end": 198,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 140,
									"end": 198,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 140,
									"end": 198,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 140,
									"end": 198,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 140,
									"end": 198,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 198,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 140,
									"end": 198,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 140,
									"end": 198,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 140,
									"end": 198,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 140,
									"end": 198,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 180,
									"end": 190,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 172,
									"end": 177,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 172,
									"end": 177,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 172,
									"end": 190,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 172,
									"end": 190,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 172,
									"end": 190,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 172,
									"end": 190,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 172,
									"end": 190,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 172,
									"end": 190,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 172,
									"end": 190,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 172,
									"end": 190,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 172,
									"end": 190,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 172,
									"end": 190,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 172,
									"end": 190,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 172,
									"end": 190,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 172,
									"end": 190,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 172,
									"end": 190,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 172,
									"end": 190,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 172,
									"end": 190,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 172,
									"end": 190,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 172,
									"end": 190,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29,
									"end": 615,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29,
									"end": 615,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29,
									"end": 615,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29,
									"end": 615,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29,
									"end": 615,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 29,
									"end": 615,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29,
									"end": 615,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207395be2b3d72270685b3db279125d8d215549789f5df30dc693f1bfdb4534dad64736f6c63430008070033",
									".code": [
										{
											"begin": 29,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 29,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29,
											"end": 615,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29,
											"end": 615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29,
											"end": 615,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Owned.sol\":\"Owned\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Owned.sol\":{\"keccak256\":\"0xa470b0c27254635b400d19385bd1016381590cfd9713858186a5f1c049565590\",\"urls\":[\"bzz-raw://8ac9aa3d765f3a2101912ce4b4428cca5d857ff804889af839714aa685efbae1\",\"dweb:/ipfs/QmRx5aucWaX4eL6e17pA7EgzGYGs7C5sY2dScvLj7mgeGE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "Owned.sol:Owned",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"homework1.sol": {
				"homework": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "receiveMoney",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"homework1.sol\":206:345  contract homework is Owned{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Owned.sol\":180:190  msg.sender */\n  caller\n    /* \"Owned.sol\":172:177  owner */\n  0x00\n  dup1\n    /* \"Owned.sol\":172:190  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"homework1.sol\":206:345  contract homework is Owned{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"homework1.sol\":206:345  contract homework is Owned{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6d26ec18\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xe3d670d7\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"homework1.sol\":289:338  function receiveMoney() public payable {\r... */\n    tag_2:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n        /* \"homework1.sol\":241:280  mapping(address => uint) public balance */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_6:\n      pop\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"homework1.sol\":289:338  function receiveMoney() public payable {\r... */\n    tag_5:\n      jump\t// out\n        /* \"homework1.sol\":241:280  mapping(address => uint) public balance */\n    tag_10:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_15:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_17\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_18\n      jump\t// in\n    tag_17:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_9:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_20\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":228:347   */\n    tag_20:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_23\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_15\n      jump\t// in\n    tag_23:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:605   */\n    tag_24:\n        /* \"#utility.yul\":574:598   */\n      tag_26\n        /* \"#utility.yul\":592:597   */\n      dup2\n        /* \"#utility.yul\":574:598   */\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":569:572   */\n      dup3\n        /* \"#utility.yul\":562:599   */\n      mstore\n        /* \"#utility.yul\":487:605   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":611:833   */\n    tag_12:\n        /* \"#utility.yul\":704:708   */\n      0x00\n        /* \"#utility.yul\":742:744   */\n      0x20\n        /* \"#utility.yul\":731:740   */\n      dup3\n        /* \"#utility.yul\":727:745   */\n      add\n        /* \"#utility.yul\":719:745   */\n      swap1\n      pop\n        /* \"#utility.yul\":755:826   */\n      tag_29\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":812:821   */\n      dup4\n        /* \"#utility.yul\":808:825   */\n      add\n        /* \"#utility.yul\":799:805   */\n      dup5\n        /* \"#utility.yul\":755:826   */\n      tag_24\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":611:833   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":920:1016   */\n    tag_32:\n        /* \"#utility.yul\":957:964   */\n      0x00\n        /* \"#utility.yul\":986:1010   */\n      tag_34\n        /* \"#utility.yul\":1004:1009   */\n      dup3\n        /* \"#utility.yul\":986:1010   */\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":975:1010   */\n      swap1\n      pop\n        /* \"#utility.yul\":920:1016   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1022:1148   */\n    tag_35:\n        /* \"#utility.yul\":1059:1066   */\n      0x00\n        /* \"#utility.yul\":1099:1141   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1092:1097   */\n      dup3\n        /* \"#utility.yul\":1088:1142   */\n      and\n        /* \"#utility.yul\":1077:1142   */\n      swap1\n      pop\n        /* \"#utility.yul\":1022:1148   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1154:1231   */\n    tag_27:\n        /* \"#utility.yul\":1191:1198   */\n      0x00\n        /* \"#utility.yul\":1220:1225   */\n      dup2\n        /* \"#utility.yul\":1209:1225   */\n      swap1\n      pop\n        /* \"#utility.yul\":1154:1231   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1360:1477   */\n    tag_22:\n        /* \"#utility.yul\":1469:1470   */\n      0x00\n        /* \"#utility.yul\":1466:1467   */\n      dup1\n        /* \"#utility.yul\":1459:1471   */\n      revert\n        /* \"#utility.yul\":1483:1605   */\n    tag_18:\n        /* \"#utility.yul\":1556:1580   */\n      tag_42\n        /* \"#utility.yul\":1574:1579   */\n      dup2\n        /* \"#utility.yul\":1556:1580   */\n      tag_32\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":1549:1554   */\n      dup2\n        /* \"#utility.yul\":1546:1581   */\n      eq\n        /* \"#utility.yul\":1536:1599   */\n      tag_43\n      jumpi\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1592:1593   */\n      dup1\n        /* \"#utility.yul\":1585:1597   */\n      revert\n        /* \"#utility.yul\":1536:1599   */\n    tag_43:\n        /* \"#utility.yul\":1483:1605   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122089516473930edd8b717975ef789f481403d89a0c7971f0d45a423da80c7fbcb164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610189806100606000396000f3fe6080604052600436106100295760003560e01c80636d26ec181461002e578063e3d670d714610038575b600080fd5b610036610075565b005b34801561004457600080fd5b5061005f600480360381019061005a91906100a4565b610077565b60405161006c91906100e0565b60405180910390f35b565b60016020528060005260406000206000915090505481565b60008135905061009e8161013c565b92915050565b6000602082840312156100ba576100b9610137565b5b60006100c88482850161008f565b91505092915050565b6100da8161012d565b82525050565b60006020820190506100f560008301846100d1565b92915050565b60006101068261010d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b610145816100fb565b811461015057600080fd5b5056fea264697066735822122089516473930edd8b717975ef789f481403d89a0c7971f0d45a423da80c7fbcb164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x189 DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D26EC18 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xE3D670D7 EQ PUSH2 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A SWAP2 SWAP1 PUSH2 0xA4 JUMP JUMPDEST PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0xE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9E DUP2 PUSH2 0x13C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBA JUMPI PUSH2 0xB9 PUSH2 0x137 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8 DUP5 DUP3 DUP6 ADD PUSH2 0x8F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDA DUP2 PUSH2 0x12D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x106 DUP3 PUSH2 0x10D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x145 DUP2 PUSH2 0xFB JUMP JUMPDEST DUP2 EQ PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 MLOAD PUSH5 0x73930EDD8B PUSH18 0x7975EF789F481403D89A0C7971F0D45A423D 0xA8 0xC PUSH32 0xBCB164736F6C6343000807003300000000000000000000000000000000000000 ",
							"sourceMap": "206:139:1:-:0;;;;;;;;;;;;;180:10:0;172:5;;:18;;;;;;;;;;;;;;;;;;206:139:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@balance_34": {
									"entryPoint": 119,
									"id": 34,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@receiveMoney_38": {
									"entryPoint": 117,
									"id": 38,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 311,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1608:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:2"
															},
															"nodeType": "YulIf",
															"src": "228:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:2",
														"type": ""
													}
												],
												"src": "152:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "569:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "592:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "574:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "574:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "540:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "547:3:2",
														"type": ""
													}
												],
												"src": "487:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "709:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "719:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "731:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "742:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "727:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "727:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "719:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "799:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "812:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "823:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "808:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "808:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "755:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "755:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "755:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "681:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "693:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "704:4:2",
														"type": ""
													}
												],
												"src": "611:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "879:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "889:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "905:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "899:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "899:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "889:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "872:6:2",
														"type": ""
													}
												],
												"src": "839:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "965:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "975:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1004:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "986:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "986:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "975:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "947:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "957:7:2",
														"type": ""
													}
												],
												"src": "920:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1067:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1077:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1092:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1099:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1088:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1088:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1077:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1049:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1059:7:2",
														"type": ""
													}
												],
												"src": "1022:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1199:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1209:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1220:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1209:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1181:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1191:7:2",
														"type": ""
													}
												],
												"src": "1154:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1326:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1343:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1346:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1336:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1336:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1336:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1237:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1449:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1466:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1469:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1459:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1459:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1459:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1360:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1583:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1592:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1595:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1585:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1585:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1585:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1549:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1574:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1556:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1556:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1546:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1546:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1539:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1539:43:2"
															},
															"nodeType": "YulIf",
															"src": "1536:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1519:5:2",
														"type": ""
													}
												],
												"src": "1483:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100295760003560e01c80636d26ec181461002e578063e3d670d714610038575b600080fd5b610036610075565b005b34801561004457600080fd5b5061005f600480360381019061005a91906100a4565b610077565b60405161006c91906100e0565b60405180910390f35b565b60016020528060005260406000206000915090505481565b60008135905061009e8161013c565b92915050565b6000602082840312156100ba576100b9610137565b5b60006100c88482850161008f565b91505092915050565b6100da8161012d565b82525050565b60006020820190506100f560008301846100d1565b92915050565b60006101068261010d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b610145816100fb565b811461015057600080fd5b5056fea264697066735822122089516473930edd8b717975ef789f481403d89a0c7971f0d45a423da80c7fbcb164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D26EC18 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xE3D670D7 EQ PUSH2 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A SWAP2 SWAP1 PUSH2 0xA4 JUMP JUMPDEST PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0xE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9E DUP2 PUSH2 0x13C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBA JUMPI PUSH2 0xB9 PUSH2 0x137 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8 DUP5 DUP3 DUP6 ADD PUSH2 0x8F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDA DUP2 PUSH2 0x12D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x106 DUP3 PUSH2 0x10D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x145 DUP2 PUSH2 0xFB JUMP JUMPDEST DUP2 EQ PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 MLOAD PUSH5 0x73930EDD8B PUSH18 0x7975EF789F481403D89A0C7971F0D45A423D 0xA8 0xC PUSH32 0xBCB164736F6C6343000807003300000000000000000000000000000000000000 ",
							"sourceMap": "206:139:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;289:49;;;:::i;:::-;;241:39;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;289:49;:::o;241:39::-;;;;;;;;;;;;;;;;;:::o;7:139:2:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;487:118;;:::o;611:222::-;704:4;742:2;731:9;727:18;719:26;;755:71;823:1;812:9;808:17;799:6;755:71;:::i;:::-;611:222;;;;:::o;920:96::-;957:7;986:24;1004:5;986:24;:::i;:::-;975:35;;920:96;;;:::o;1022:126::-;1059:7;1099:42;1092:5;1088:54;1077:65;;1022:126;;;:::o;1154:77::-;1191:7;1220:5;1209:16;;1154:77;;;:::o;1360:117::-;1469:1;1466;1459:12;1483:122;1556:24;1574:5;1556:24;:::i;:::-;1549:5;1546:35;1536:63;;1595:1;1592;1585:12;1536:63;1483:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "78600",
								"executionCost": "24395",
								"totalCost": "102995"
							},
							"external": {
								"balance(address)": "2814",
								"receiveMoney()": "98"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 206,
									"end": 345,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 206,
									"end": 345,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 206,
									"end": 345,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 206,
									"end": 345,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 206,
									"end": 345,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 206,
									"end": 345,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 206,
									"end": 345,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 206,
									"end": 345,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 206,
									"end": 345,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 206,
									"end": 345,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 206,
									"end": 345,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 206,
									"end": 345,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 206,
									"end": 345,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 206,
									"end": 345,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 180,
									"end": 190,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 172,
									"end": 177,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 172,
									"end": 177,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 172,
									"end": 190,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 172,
									"end": 190,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 172,
									"end": 190,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 172,
									"end": 190,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 172,
									"end": 190,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 172,
									"end": 190,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 172,
									"end": 190,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 172,
									"end": 190,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 172,
									"end": 190,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 172,
									"end": 190,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 172,
									"end": 190,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 172,
									"end": 190,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 172,
									"end": 190,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 172,
									"end": 190,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 172,
									"end": 190,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 172,
									"end": 190,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 172,
									"end": 190,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 172,
									"end": 190,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 206,
									"end": 345,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 206,
									"end": 345,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 206,
									"end": 345,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 206,
									"end": 345,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 206,
									"end": 345,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 206,
									"end": 345,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 206,
									"end": 345,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122089516473930edd8b717975ef789f481403d89a0c7971f0d45a423da80c7fbcb164736f6c63430008070033",
									".code": [
										{
											"begin": 206,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 206,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 206,
											"end": 345,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 206,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 206,
											"end": 345,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 206,
											"end": 345,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 206,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 206,
											"end": 345,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 206,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 345,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 206,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 206,
											"end": 345,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 206,
											"end": 345,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 206,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "6D26EC18"
										},
										{
											"begin": 206,
											"end": 345,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 206,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 206,
											"end": 345,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 206,
											"end": 345,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 206,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "E3D670D7"
										},
										{
											"begin": 206,
											"end": 345,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 206,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 206,
											"end": 345,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 206,
											"end": 345,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 206,
											"end": 345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 206,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 345,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 206,
											"end": 345,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 289,
											"end": 338,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 289,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 289,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 289,
											"end": 338,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 289,
											"end": 338,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 289,
											"end": 338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 289,
											"end": 338,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 241,
											"end": 280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 241,
											"end": 280,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 280,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 241,
											"end": 280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 241,
											"end": 280,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 241,
											"end": 280,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 241,
											"end": 280,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 241,
											"end": 280,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 241,
											"end": 280,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 241,
											"end": 280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 241,
											"end": 280,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 241,
											"end": 280,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 241,
											"end": 280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 241,
											"end": 280,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 241,
											"end": 280,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 241,
											"end": 280,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 241,
											"end": 280,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 241,
											"end": 280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 241,
											"end": 280,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 289,
											"end": 338,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 289,
											"end": 338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 289,
											"end": 338,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 241,
											"end": 280,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 241,
											"end": 280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 241,
											"end": 280,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 241,
											"end": 280,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 280,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 241,
											"end": 280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 280,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 280,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 241,
											"end": 280,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 592,
											"end": 597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 569,
											"end": 572,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 562,
											"end": 599,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 611,
											"end": 833,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 611,
											"end": 833,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 704,
											"end": 708,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 744,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 731,
											"end": 740,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 727,
											"end": 745,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 719,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 719,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 755,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 821,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 808,
											"end": 825,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 799,
											"end": 805,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 755,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 755,
											"end": 826,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 755,
											"end": 826,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 755,
											"end": 826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 611,
											"end": 833,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 611,
											"end": 833,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 611,
											"end": 833,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 611,
											"end": 833,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 611,
											"end": 833,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 920,
											"end": 1016,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 920,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 957,
											"end": 964,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 986,
											"end": 1010,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 986,
											"end": 1010,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 986,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 975,
											"end": 1010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 975,
											"end": 1010,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 920,
											"end": 1016,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 920,
											"end": 1016,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 920,
											"end": 1016,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 920,
											"end": 1016,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1059,
											"end": 1066,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1141,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1092,
											"end": 1097,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1088,
											"end": 1142,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1142,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1142,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1154,
											"end": 1231,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1154,
											"end": 1231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1191,
											"end": 1198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 1225,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1225,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1225,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1231,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1231,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1231,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1231,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1360,
											"end": 1477,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1360,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1470,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1466,
											"end": 1467,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1471,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1605,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1483,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1574,
											"end": 1579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1556,
											"end": 1580,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1556,
											"end": 1580,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1556,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1546,
											"end": 1581,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1536,
											"end": 1599,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1592,
											"end": 1593,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1585,
											"end": 1597,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1599,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1536,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1605,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balance(address)": "e3d670d7",
							"receiveMoney()": "6d26ec18"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiveMoney\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"homework1.sol\":\"homework\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Owned.sol\":{\"keccak256\":\"0xa470b0c27254635b400d19385bd1016381590cfd9713858186a5f1c049565590\",\"urls\":[\"bzz-raw://8ac9aa3d765f3a2101912ce4b4428cca5d857ff804889af839714aa685efbae1\",\"dweb:/ipfs/QmRx5aucWaX4eL6e17pA7EgzGYGs7C5sY2dScvLj7mgeGE\"]},\"homework1.sol\":{\"keccak256\":\"0x491a4253a46e8dcb368b6cbef966a875691694b5d14db7dbec32edb442f2f2f1\",\"urls\":[\"bzz-raw://4db4ed50dd4cd210dd8b3771da7dd363da29f7f405c133284e08af5fae1751d9\",\"dweb:/ipfs/QmWGddgWuNPufLteF6VoPGCdtzMGtwnRUTq7TNmQmAeqy8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "homework1.sol:homework",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 34,
								"contract": "homework1.sol:homework",
								"label": "balance",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> Owned.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Owned.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> homework1.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "homework1.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n --> Owned.sol:7:5:\n  |\n7 |     constructor() public {\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 198,
					"file": "Owned.sol",
					"start": 140
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Owned.sol": {
				"ast": {
					"absolutePath": "Owned.sol",
					"exportedSymbols": {
						"Owned": [
							25
						]
					},
					"id": 26,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 25,
							"linearizedBaseContracts": [
								25
							],
							"name": "Owned",
							"nameLocation": "38:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "126:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 25,
									"src": "118:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "118:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "161:37:0",
										"statements": [
											{
												"expression": {
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "172:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 7,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "180:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "180:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "172:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "172:18:0"
											}
										]
									},
									"id": 12,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "151:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "161:0:0"
									},
									"scope": 25,
									"src": "140:58:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "340:270:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 15,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "417:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "417:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 17,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "431:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "417:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420616c6c6f776564",
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "438:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_407a93cd9588e1f87530ae7a55d9dae87b125ed01cf287ec5fa47d65e38e4c3c",
																"typeString": "literal_string \"You are not allowed\""
															},
															"value": "You are not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_407a93cd9588e1f87530ae7a55d9dae87b125ed01cf287ec5fa47d65e38e4c3c",
																"typeString": "literal_string \"You are not allowed\""
															}
														],
														"id": 14,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "409:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "409:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "409:51:0"
											},
											{
												"id": 22,
												"nodeType": "PlaceholderStatement",
												"src": "471:1:0"
											}
										]
									},
									"id": 24,
									"name": "onlyOwner",
									"nameLocation": "330:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "340:0:0"
									},
									"src": "321:289:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 26,
							"src": "29:586:0",
							"usedErrors": []
						}
					],
					"src": "0:616:0"
				},
				"id": 0
			},
			"homework1.sol": {
				"ast": {
					"absolutePath": "homework1.sol",
					"exportedSymbols": {
						"Owned": [
							25
						],
						"homework": [
							39
						]
					},
					"id": 40,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 27,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:33:1"
						},
						{
							"absolutePath": "Owned.sol",
							"file": "./Owned.sol",
							"id": 28,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 40,
							"sourceUnit": 26,
							"src": "35:21:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 29,
										"name": "Owned",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 25,
										"src": "227:5:1"
									},
									"id": 30,
									"nodeType": "InheritanceSpecifier",
									"src": "227:5:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 39,
							"linearizedBaseContracts": [
								39,
								25
							],
							"name": "homework",
							"nameLocation": "215:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "e3d670d7",
									"id": 34,
									"mutability": "mutable",
									"name": "balance",
									"nameLocation": "273:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "241:39:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 33,
										"keyType": {
											"id": 31,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "249:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "241:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 32,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "260:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "328:10:1",
										"statements": []
									},
									"functionSelector": "6d26ec18",
									"id": 38,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "receiveMoney",
									"nameLocation": "298:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "310:2:1"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "328:0:1"
									},
									"scope": 39,
									"src": "289:49:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 40,
							"src": "206:139:1",
							"usedErrors": []
						}
					],
					"src": "0:345:1"
				},
				"id": 1
			}
		}
	}
}